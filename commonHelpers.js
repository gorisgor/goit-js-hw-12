import{a as S,i as g,S as C}from"./assets/vendor-09d7c26e.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const q="https://pixabay.com/api/",x="43757696-1a32682a4096c08080d446579",p=(r,t=1)=>S.get(`${q}?key=${x}`,{params:{q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:t}});function f(r,t){if(r.total!==0){const s=r.hits.map(i=>{const{webformatURL:e,largeImageURL:o,tags:a,likes:L,views:b,comments:v,downloads:w}=i;return`<li class="card">
          <a class="gallery-link" href="${o}">
            <img src="${e}" alt="${a}">
          </a>
          <div class="card-body">
            <p class="card-text">Likes <span>${L}</span></p>
            <p class="card-text">Views <span>${b}</span></p>
            <p class="card-text">Comments <span>${v}</span></p>
            <p class="card-text">Downloads <span>${w}</span></p>
          </div>
        </li>`}).join("");t.insertAdjacentHTML("beforeend",s)}else t.innerHTML="",g.show({message:"Sorry, there are no images matching your search query. Please try again!",messageColor:"#fff",backgroundColor:"#b52222",position:"topRight",progressBar:!1})}const c=document.querySelector(".gallery"),M=document.querySelector(".form"),l=document.querySelector(".loader"),d=document.querySelector(".load-more");let n=null,u=1,m=0;M.addEventListener("submit",$);d.addEventListener("click",y);async function $(r){r.preventDefault();const t=r.currentTarget;if(n=t.elements.query.value,c.innerHTML="",n.trim()!==""){l.classList.remove("is-hidden");try{const{data:s}=await p(n);f(s,c),m=Math.ceil(s.totalHits/15),m>1&&d.classList.remove("invisible"),l.classList.add("is-hidden"),h()}catch(s){console.error(s),g.show({message:"Something went wrong!",messageColor:"#fff",backgroundColor:"#b52222",position:"topRight",progressBar:!1})}t.reset()}}function h(){new C(".gallery a",{captionsData:"alt",captionsDelay:250,overlayOpacity:0}).refresh()}function O(){const s=c.querySelector(".card").getBoundingClientRect().height*2;console.log(s),window.scrollBy({top:s,left:0,behavior:"smooth"})}async function y(r){r.preventDefault();try{u+=1;const{data:t}=await p(n,u);if(l.classList.remove("is-hidden"),f(t,c),u>=m)throw d.classList.add("invisible"),d.removeEventListener("click",y),new Error;O(),h()}catch{g.show({message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:4e3})}l.classList.add("is-hidden")}
//# sourceMappingURL=commonHelpers.js.map
